<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Qwingo</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      text-align: center;
      margin: 20px;
      background: #f9f9f9;
    }
    h1 { color: #333; }
    .board {
      display: inline-grid;
      grid-template-columns: repeat(5, 60px);
      gap: 4px;
      margin: 20px;
    }
    .cell {
      width: 60px;
      height: 40px;
      border: 1px solid #ccc;
      background: white;
      display: flex;
      justify-content: center;
      align-items: center;
      cursor: pointer;
      font-size: 18px;
    }
    .filled { background: #a8e6cf; }
    #controls { margin: 15px; }
    button { padding: 10px 15px; margin: 5px; }
  </style>
</head>
<body>
  <h1>Qwingo ðŸŽ²</h1>
  <p id="status">Your turn! Pick a number to call.</p>

  <div id="controls">
    <input type="number" id="numberInput" placeholder="1â€“100">
    <button onclick="callNumber()">Call Number</button>
  </div>

  <div class="board" id="board"></div>

  <script>
    const board = document.getElementById("board");
    const status = document.getElementById("status");
    let chosenNumber = null;

    // Build 5 columns Ã— 12 rows (60 spaces)
    for (let i = 0; i < 60; i++) {
      const cell = document.createElement("div");
      cell.className = "cell";
      cell.dataset.index = i;
      cell.onclick = () => placeNumber(cell);
      board.appendChild(cell);
    }

    function callNumber() {
      const val = parseInt(document.getElementById("numberInput").value);
      if (!val || val < 1 || val > 100) {
        alert("Enter a number between 1 and 100.");
        return;
      }
      chosenNumber = val;
      status.textContent = `You called ${val}. Place it on your board.`;
    }

    function placeNumber(cell) {
      if (chosenNumber === null) {
        alert("Call a number first!");
        return;
      }
      if (cell.textContent !== "") {
        alert("This cell is already filled.");
        return;
      }
      cell.textContent = chosenNumber;
      cell.classList.add("filled");
      checkWin();
      chosenNumber = null;
      status.textContent = "Your turn again â€” call another number!";
    }

    function checkWin() {
      // Simple: check if any row or column is full
      for (let c = 0; c < 5; c++) {
        let full = true;
        for (let r = 0; r < 12; r++) {
          const idx = r * 5 + c;
          if (board.children[idx].textContent === "") full = false;
        }
        if (full) { alert("QWINGO! ðŸŽ‰ You win!"); return; }
      }
    }
  </script>
</body>
</html>